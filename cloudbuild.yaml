# options:
#   logging: CLOUD_LOGGING_ONLY  # ✅ Fix for logs bucket error

# steps:
#   # Step 1: Build Frontend
#   - name: 'node:lts'
#     id: 'Build Frontend'
#     dir: 'frontend'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         npm install --legacy-peer-deps
#         npm run build

#   # Step 2: Prepare Backend
#   - name: 'node:lts'
#     id: 'Prepare Backend'
#     dir: 'backend'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         npm install
#         mkdir -p public
#         cp -r ../frontend/dist/* public/

#   # Step 3: Deploy to Cloud Run (no env vars here)
#   - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#     id: 'Deploy to Cloud Run'
#     entrypoint: 'gcloud'
#     args:
#       - 'run'
#       - 'deploy'
#       - 'crm-backend-frontend-v1'  # ✅ Your combined service name
#       - '--source'
#       - './backend'
#       - '--region'
#       - 'asia-south1'           # ✅ Same as your DB region
#       - '--platform'
#       - 'managed'
#       - '--allow-unauthenticated'



options:
  logging: CLOUD_LOGGING_ONLY  # ✅ Fix for logs bucket error

steps:
  # Step 0: Show Node Version
  - name: 'node:20-slim'
    id: 'Show Node Version'
    entrypoint: 'node'
    args: ['-v']

  # Step 1: Build Frontend
  - name: 'node:20-slim'
    id: 'Build Frontend'
    dir: 'frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install --legacy-peer-deps
        npm run build

  # Step 2: Prepare Backend
  - name: 'node:20-slim'
    id: 'Prepare Backend'
    dir: 'backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install
        mkdir -p public
        cp -r ../frontend/dist/* public/

  # Step 3: Deploy to Cloud Run (no env vars here)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'crm-backend-frontend-v1'  # ✅ Your combined service name
      - '--source'
      - './backend'
      - '--region'
      - 'asia-south1'           # ✅ Same as your DB region
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances'
      - 'modular-asset-440906-i2:asia-south1:aitq-user-data'   # <---- UPDATE THIS
      - '--set-env-vars'
      - |
        DB_NAME=crm,
        DB_USER=root-crm,
        DB_PASSWORD=Omkarghogare@89,
        INSTANCE_CONNECTION_NAME=modular-asset-440906-i2:asia-south1:aitq-user-data

timeout: 1200s 